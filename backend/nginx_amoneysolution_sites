# nano /etc/nginx/sites-available/default
# /etc/nginx/sites-available/default 
# this makes nginx works and serves the API on the subdomain api.amoneysolution.us
server {
    if ($host = api.amoneysolution.us) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    listen 80;
    server_name amoneysolution.us www.amoneysolution.us api.amoneysolution.us;
    # Allow Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }
    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}
# Main domain HTTPS (legacy)
server {
    listen 443 ssl http2;
    server_name amoneysolution.us www.amoneysolution.us;
    # SSL Certificate paths
    ssl_certificate /etc/letsencrypt/live/amoneysolution.us/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/amoneysolution.us/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    # Redirect to API subdomain
    location / {
        return 301 https://api.amoneysolution.us$request_uri;
    }
}

# API subdomain HTTPS (main backend)
server {
    listen 443 ssl http2;
    server_name api.amoneysolution.us;
    # SSL Certificate paths
    ssl_certificate /etc/letsencrypt/live/api.amoneysolution.us/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/api.amoneysolution.us/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    # Client body size for uploads
    client_max_body_size 10M;
    # API Routes - Pure proxy, let FastAPI handle everything
    location /api/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_buffering off;
    }
    # Socket.IO WebSocket Support
    location /socket.io/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_buffering off;
    }
    # Health check endpoint
    location /health {
        proxy_pass http://127.0.0.1:8000/api/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    # Default response for root
    location / {
        return 200 'TopicTrends API is running! Try /api/health or /api/docs';
        add_header Content-Type text/plain;
    }
}